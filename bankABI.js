const bankABI = [
    'event NewFlog(address indexed caller, bytes4 indexed sig, bytes data)',
    'event NewPalm0(bytes32 indexed key, bytes32 val)',
    'event NewPalm1(bytes32 indexed key, bytes32 indexed idx0, bytes32 val)',
    'event NewPalm2(bytes32 indexed key, bytes32 indexed idx0, bytes32 indexed idx1, bytes32 val)',
    'event NewPalmBytes2(bytes32 indexed key, bytes32 indexed idx0, bytes32 indexed idx1, bytes val)',
    'event DiamondCut(tuple(address target, uint8 action, bytes4[] selectors)[] facetCuts, address target, bytes data)',
    'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',
    'function acceptOwnership()',
    'function diamondCut(tuple(address target, uint8 action, bytes4[] selectors)[] facetCuts, address target, bytes data)',
    'function facetAddress(bytes4 selector) view returns (address facet)',
    'function facetAddresses() view returns (address[] addresses)',
    'function facetFunctionSelectors(address facet) view returns (bytes4[] selectors)',
    'function facets() view returns (tuple(address target, bytes4[] selectors)[] diamondFacets)',
    'function getFallbackAddress() view returns (address)',
    'function nomineeOwner() view returns (address)',
    'function owner() view returns (address)',
    'function setFallbackAddress(address fallbackAddress)',
    'function supportsInterface(bytes4 interfaceId) view returns (bool)',
    'function transferOwnership(address account)',
    'function CAP_MAX() pure returns (uint256)',
    'function REL_MAX() pure returns (uint256)',
    'function fb() view returns (address)',
    'function file(bytes32 key, bytes32 val) payable',
    'function rico() view returns (address)',
    'function FEE_MAX() pure returns (uint256)',
    'function MINT() pure returns (uint256)',
    'function bail(bytes32 i, address u) payable returns (bytes)',
    'function ceil() view returns (uint256)',
    'function debt() view returns (uint256)',
    'function drip(bytes32 i) payable',
    'function filh(bytes32 ilk, bytes32 key, bytes32[] xs, bytes32 val) payable',
    'function filk(bytes32 ilk, bytes32 key, bytes32 val) payable',
    'function flash(address code, bytes data) payable returns (bytes result)',
    'function frob(bytes32 i, address u, bytes dink, int256 dart) payable',
    'function geth(bytes32 ilk, bytes32 key, bytes32[] xs) view returns (bytes32)',
    'function hookcallext(bytes32 i, bytes indata) payable returns (bytes)',
    'function ilks(bytes32 i) view returns (tuple(uint256 tart, uint256 rack, uint256 line, uint256 dust, uint256 fee, uint256 rho, uint256 chop, address hook))',
    'function init(bytes32 ilk, address hook) payable',
    'function ink(bytes32 i, address u) view returns (bytes)',
    'function joy() view returns (uint256)',
    'function par() view returns (uint256)',
    'function rest() view returns (uint256)',
    'function safe(bytes32 i, address u) view returns (uint8, uint256, uint256)',
    'function sin() view returns (uint256)',
    'function urns(bytes32 i, address u) view returns (uint256)',
    'function RISK() view returns (address)',
    'function keep(bytes32[] ilks) payable',
    'function plat() view returns (tuple(uint256 pep, uint256 pop))',
    'function plot() view returns (tuple(uint256 pep, uint256 pop))',
    'function ramp() view returns (tuple(uint256 bel, uint256 cel, uint256 rel, uint256 wel))',
    'function rudd() view returns (tuple(address src, bytes32 tag))',
    'function toll() view returns (uint256)',
    'function cap() view returns (uint256)',
    'function how() view returns (uint256)',
    'function poke() payable',
    'function tau() view returns (uint256)',
    'function tip() view returns (tuple(address src, bytes32 tag))',
    'function way() view returns (uint256)'
];

export default bankABI;